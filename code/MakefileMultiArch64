# --- OceanDepth Makefile (multi-arch 64-bit) ---

# sudo apt install build-essential gcc-aarch64-linux-gnu mingw-w64 valgrind -y
#¬†make -f MakefileMultiArch64
# ne peut √™tre ex√©cut√© que sous linux x86_64 (pas arm64)

CC_LIN_X86_64	= gcc
CC_LIN_ARM64	= aarch64-linux-gnu-gcc
CC_WIN_X86_64	= x86_64-w64-mingw32-gcc
WINDRES			= x86_64-w64-mingw32-windres

CFLAGS        = -Wall -Wextra -O2 -std=c99

TARGET        = oceandepth
SRCDIR        = src
OUTDIR        = output

SOURCES       = $(wildcard $(SRCDIR)/*.c)

# --- Plateforme Linux ---
TARGET_LINUX_x86_64 = $(TARGET)_linux_x86_64
TARGET_LINUX_arm64  = $(TARGET)_linux_arm64

# --- Plateforme Windows x86-64 ---
TARGET_WIN64        = $(TARGET)_win_x68_64.exe
RCFILE              = rc/icon.rc
ICONRES             = rc/icon.o

# --- Cibles principales ---
.PHONY: all linux_x86_64 linux_arm64 win_x86_64 clean debug prod valgrind

all: linux_x86_64 linux_arm64 win_x86_64

linux_x86_64:
	@echo "üêß Compilation Linux x86_64..."
	@mkdir -p $(OUTDIR)
	$(CC_LIN_X86_64) $(SOURCES) -o $(OUTDIR)/$(TARGET_LINUX_x86_64) $(CFLAGS)

linux_arm64:
	@echo "üê† Compilation Linux arm64..."
	@mkdir -p $(OUTDIR)
	$(CC_LIN_ARM64) $(SOURCES) -o $(OUTDIR)/$(TARGET_LINUX_arm64) $(CFLAGS)

# --- Compilation Windows x86_64 avec ic√¥ne ---
win_x86_64: $(ICONRES)
	@echo "üí† Compilation Windows x86-64 avec ic√¥ne..."
	@mkdir -p $(OUTDIR)
	$(CC_WIN_X86_64) $(SOURCES) $(ICONRES) -o $(OUTDIR)/$(TARGET_WIN64) $(CFLAGS)

# --- Compilation du fichier .rc en .o ---
$(ICONRES): $(RCFILE)
	@echo "üé® G√©n√©ration de la ressource ic√¥ne..."
	$(WINDRES) $< -O coff -o $@

# --- Nettoyage ---
clean:
	@echo "üßπ Nettoyage des fichiers compil√©s..."
	rm -f $(OUTDIR)/$(TARGET)_* $(ICONRES)

# --- Debug (inclut debug symbols et flag DEBUG) ---
debug: CFLAGS += -g -DDEBUG
debug: clean all

# --- Valgrind ---
valgrind: debug
	cd $(OUTDIR) && valgrind -v --leak-check=full --track-origins=yes ./$(TARGET_LINUX_x86_64) && cd ..

# --- Production (optimisation -O3 sans debug) ---
prod: CFLAGS += -O3 -DNDEBUG
prod: clean all
